name: Containers

on:
  pull_request:
  push:
    branches: ['main']
    tags:
      - v*.*.*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        containers:
          - auditor
          - auditor-apel-plugin
          - auditor-kubernetes-collector

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Log in to Docker Hub
        if: ${{ github.repository == 'ALU-Schumacher/AUDITOR' && github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to ghcr.io
        if: ${{ github.repository == 'ALU-Schumacher/AUDITOR' && github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            aluschumacher/${{ matrix.containers }}
            ghcr.io/ALU-Schumacher/${{ matrix.containers }}
          tags: |
            type=edge,branch=main
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: containers/${{ matrix.containers }}/Dockerfile
          push: ${{ github.repository == 'ALU-Schumacher/AUDITOR' && github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
