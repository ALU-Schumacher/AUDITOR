# Default values for auditor-collector.

# nameOverride overrides the name of the chart
nameOverride: ""
# fullnameOverride overrides the fully qualified name of the chart
fullnameOverride: ""

## Collector image to use
#registry: "localhost:5000"
registry: ""
repository: "auditor-kubernetes-collector"
# Overrides the image tag whose default is the chart appVersion.
tag: null
pullPolicy: IfNotPresent

collector:
  annotations: {}
  uid: 65534
  gid: 65534
  # Collector config
  # See https://alu-schumacher.github.io/AUDITOR/latest/#collectors
  # Leaving a value empty will apply the default
  config:
    auditorAddress: auditor
    auditorPort: 8000
    prometheusAddress: prom-auditor-prometheus
    prometheusPort: 9090
    recordPrefix: KUBE_
    earliestDatetime: ""
    auditorTimeout:
    prometheusTimeout:
    # As in job_filter
    namespaces:
      - default
    # As in job_filter
    labels:
      - app==test
    collectInterval: 60
    mergeInterval: 60
    backlogInterval:
    backlogMaxretries:
    logLevel: info

persistentVolume:
  use: true
  #annotations:
  #  pv.beta.kubernetes.io/gid: "210"
  size: "100Mi"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values: [""] # Hostname
  type:
    local:
      path: /srv/auditor/collector

serviceAccount:
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set, a name is generated using the fullname template
  name: ""

clusterRole:
  annotations: {}
  name: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http


# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
